<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>johnny 写字的地方</title>
        <link>http://example.org/</link>
        <description>johnny 写字的地方</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>johnny.gor10@gmail.com (johnny)</managingEditor>
            <webMaster>johnny.gor10@gmail.com (johnny)</webMaster><lastBuildDate>Tue, 19 Sep 2023 12:00:00 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>arthas使用简明指南</title>
    <link>http://example.org/posts/tools/arthas%E7%AE%80%E6%98%8E%E6%8C%87%E5%8D%97/</link>
    <pubDate>Tue, 19 Sep 2023 12:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/tools/arthas%E7%AE%80%E6%98%8E%E6%8C%87%E5%8D%97/</guid>
    <description><![CDATA[什么是arthas Arthas 是一款线上监控诊断产品，通过全局视角实时查看应用 load、内存、gc、线程的状态信息，并能在不修改应用代码的情况下，对业]]></description>
</item><item>
    <title>解析class文件</title>
    <link>http://example.org/posts/jvm/%E8%AE%A4%E8%AF%86class%E6%96%87%E4%BB%B6/</link>
    <pubDate>Sun, 11 Sep 2022 14:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/jvm/%E8%AE%A4%E8%AF%86class%E6%96%87%E4%BB%B6/</guid>
    <description><![CDATA[1. 拆解Class文件 1.1 一个简单的类 首先我们来看一个简单的类Company 1 2 3 4 5 6 7 8 9 10 11 12 package cn.johnny; public class Company { private String company; public String getCompany(){ return company; } public void setCompany(String company){ this.company = company;]]></description>
</item><item>
    <title>Redis翻页扫描之Scan</title>
    <link>http://example.org/posts/redis/redis%E7%BF%BB%E9%A1%B5%E6%89%AB%E6%8F%8F%E4%B9%8Bscan/</link>
    <pubDate>Mon, 07 Mar 2022 16:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/redis%E7%BF%BB%E9%A1%B5%E6%89%AB%E6%8F%8F%E4%B9%8Bscan/</guid>
    <description><![CDATA[场景 如何从海量的key中查找我想要的前缀的keys？ 简单。直接keys prefix*行不行？ 很遗憾，这个做法在生产环境不可取。 需要考虑两个问]]></description>
</item><item>
    <title>Redis限流的演进</title>
    <link>http://example.org/posts/redis/redis%E9%99%90%E6%B5%81%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
    <pubDate>Sat, 05 Mar 2022 18:45:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/redis%E9%99%90%E6%B5%81%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
    <description><![CDATA[场景 限制用户的接口请求流量，保护服务器 控制用户行为，比如发帖、回复 简单限流之ZSET 利用zset的结构，可以用score圈出一个固定的时间窗]]></description>
</item><item>
    <title>大集合判断之布隆过滤器</title>
    <link>http://example.org/posts/redis/%E5%A4%A7%E9%9B%86%E5%90%88%E5%88%A4%E6%96%AD%E4%B9%8B%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
    <pubDate>Wed, 02 Mar 2022 16:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/%E5%A4%A7%E9%9B%86%E5%90%88%E5%88%A4%E6%96%AD%E4%B9%8B%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
    <description><![CDATA[场景 新闻客户端推送新闻，它不会推送重复的内容，这意味着每次刷新的时候，它都要进行一次去重 方案 很容易想到通过DB保存用户的历史记录，每次推送时]]></description>
</item><item>
    <title>UV统计之HyperLogLog</title>
    <link>http://example.org/posts/redis/uv%E7%BB%9F%E8%AE%A1%E4%B9%8Bhyperloglog/</link>
    <pubDate>Tue, 01 Mar 2022 20:27:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/uv%E7%BB%9F%E8%AE%A1%E4%B9%8Bhyperloglog/</guid>
    <description><![CDATA[场景 统计页面的UV 方案一： 利用set的去重特性，存储空间占用大 方案二： HyperLogLog，存在一定的误差（0.81%），但是内存占用相比]]></description>
</item><item>
    <title>Bitmap之二值统计</title>
    <link>http://example.org/posts/redis/bitmap%E4%B9%8B%E4%BA%8C%E5%80%BC%E7%BB%9F%E8%AE%A1/</link>
    <pubDate>Tue, 01 Mar 2022 10:16:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/bitmap%E4%B9%8B%E4%BA%8C%E5%80%BC%E7%BB%9F%E8%AE%A1/</guid>
    <description><![CDATA[什么是Bitmap 首先需要说明Bitmap并不是Redis的5大数据结构之一，其实现底层是Redis的String类型。 String的实现是]]></description>
</item><item>
    <title>妙用Redis实现延时队列</title>
    <link>http://example.org/posts/redis/%E5%A6%99%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%BB%B6%E6%97%B6%E9%98%9F%E5%88%97/</link>
    <pubDate>Mon, 28 Feb 2022 10:15:08 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/%E5%A6%99%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%BB%B6%E6%97%B6%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[简单的消息队列 与专业的消息队列中间件相比 优势 如果系统本身已经集成了Redis缓存，不需要额外引入消息中间件，增加系统和运维复杂度。 使用相对简]]></description>
</item><item>
    <title>消除竞态之分布式锁</title>
    <link>http://example.org/posts/redis/%E6%B6%88%E9%99%A4%E7%AB%9E%E6%80%81%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
    <pubDate>Fri, 25 Feb 2022 13:51:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/redis/%E6%B6%88%E9%99%A4%E7%AB%9E%E6%80%81%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
    <description><![CDATA[什么是竞态 竞争冒险（race hazard）又名竞态条件、竞争条件（race condition），它旨在描述一个系统或者进程的输出依赖于不受控]]></description>
</item></channel>
</rss>
