[{"content":"背景 原本单个系统的交互中，当客户端需要查找问题时，可以拿着服务端生成的request_id来咨询。\n实现方式：\n定义日志切面，环绕指定基类 生成uuid，放置到日志的mdc 返回给到客户端 在这种实现下，单个系统的问题排查没问题。但是一旦涉及多个系统的交互，一旦出问题，每个环境都要定位一遍请求，设置到问题的流转，人员的流转。\n问题 如何提供一个统一的方式，输入一个request_id即可输出整个链路的请求日志？\n方案 提供SDK，跨服务之间在请求头传递request_id。\n逻辑：没有request_id就生成id，有的话直接获取，request_id绑定threadLocal。\n引出新的问题：\n子线程中无法直接获取request_id，threadLocal与线程绑定。\n1 2 3 4 5 6 7 ThreadLocal\u0026lt;String\u0026gt; threadLocal = new ThreadLocal\u0026lt;\u0026gt;(); threadLocal.set(\u0026#34;123\u0026#34;); System.out.println(threadLocal.get()); new Thread(() -\u0026gt; { System.out.println(threadLocal.get()); // 此处无法获取threadLocal }).start(); 解决：\n使用InheritableThreadLocal可以解决子线程继承数据的问题，但是项目中往往会使用线程池，而线程池中的线程是复用的，这时候InheritableThreadLocal就会导致数据错乱问题，因为InheritableThreadLocal只在线程创建初次复制数据。\n再次解决：\n使用TransmittableThreadLocal，由阿里开源的方案。将数据上下文传递的粒度从线程创建级别调整到任务执行前后，执行前设置，执行后清除。\n总结 跨服务之间通过请求头传递request_id。 由于request_id绑定在线程，在多线程环境下，子线程无法继承父线程的threadLocal。 通过加强版的threadLocal——TransmittableThreadLocal解决线程池中线程的上下文传递和清理 ","permalink":"https://yongqiangg.github.io/zh/posts/tech/%E5%85%A8%E9%93%BE%E8%B7%AFid%E7%9A%84%E5%AE%9E%E7%8E%B0/","summary":"\u003ch2 id=\"背景\"\u003e背景\u003c/h2\u003e\n\u003cp\u003e原本单个系统的交互中，当客户端需要查找问题时，可以拿着服务端生成的request_id来咨询。\u003c/p\u003e\n\u003cp\u003e实现方式：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e定义日志切面，环绕指定基类\u003c/li\u003e\n\u003cli\u003e生成uuid，放置到日志的mdc\u003c/li\u003e\n\u003cli\u003e返回给到客户端\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在这种实现下，单个系统的问题排查没问题。但是一旦涉及多个系统的交互，一旦出问题，每个环境都要定位一遍请求，设置到问题的流转，人员的流转。\u003c/p\u003e","title":"全链路id的实现"},{"content":"讲讲MySQL索引的理解 段落2 段落3 1 code ","permalink":"https://yongqiangg.github.io/zh/posts/tech/mysql%E7%B4%A2%E5%BC%95/","summary":"\u003ch1 id=\"讲讲mysql索引的理解\"\u003e讲讲MySQL索引的理解\u003c/h1\u003e\n\u003ch2 id=\"段落2\"\u003e段落2\u003c/h2\u003e\n\u003ch3 id=\"段落3\"\u003e段落3\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecode\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e","title":"MySQL索引"}]